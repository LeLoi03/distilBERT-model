# Hàm xử lý từng file
def process_file(file_path, output_folder):
    with open(file_path, 'r', encoding='utf-8') as file:
        text = file.read()

    # Chạy NER trên nội dung file
    doc = nlp(text)

    table_data = []

    Source = "2023"
    # Duyệt qua các thực thể được dự đoán
    for ent in doc.ents:
        if ent.label_.endswith("Date"):
            # Xử lý năm
            updated_text = f"{ent.text} {Source}" if not any(char.isdigit() and len(char) == 4 for char in ent.text.split()) else ent.text
            cleaned_text = clean_entity_text(updated_text)
            formatted_date = format_date(cleaned_text)
            table_data.append([formatted_date, ent.label_])
        else:
            table_data.append([ent.text, ent.label_])

    # Xử lý các nhãn Place, Location, và Country trước
    main_labels = ["Place", "Location", "Country"]
    main_entities = [(text, label) for text, label in table_data if label in main_labels]
    main_entities = keep_longest_label({"Geography": main_entities})["Geography"]

    # Xử lý các nhóm trong date_name_pairs
    sorted_table_data = {"Geography": main_entities}  # Bắt đầu với các thực thể chính đã lọc

    for group, pairs in date_name_pairs.items():
        group_entities = []
        for text, label in table_data:
            if any(label == p[0] or label == p[1] for p in pairs):
                group_entities.append((text, label))

        processed_group = process_group(group, group_entities)
        sorted_table_data.update(processed_group)


    # Xuất kết quả vào file JSON
    json_file_name = os.path.splitext(os.path.basename(file_path))[0] + ".json"
    json_file_path = os.path.join(output_folder, json_file_name)

    with open(json_file_path, 'w', encoding='utf-8') as json_file:
        json.dump(sorted_table_data, json_file, ensure_ascii=False, indent=4)

    print(f"Đã xử lý xong file: {file_path} và lưu kết quả vào: {json_file_path}")

# Lặp qua tất cả các file trong thư mục input
for file_name in os.listdir(input_folder):
    if file_name.endswith('.txt'):
        file_path = os.path.join(input_folder, file_name)
        process_file(file_path, output_folder)

print("Hoàn thành xử lý tất cả các file.")



Sau khi xử lý ra kết quả cuối cùng, bây giờ ngoài việc ghi thông tin ra các file json, thì bây giờ hãy bổ sung thêm 1 hàm .
Hàm này sẽ xác định trong các file input đọc vào thì file nào sẽ là file chính để xác định trong các file đọc vào file nào sẽ chứa nhiều thông tin mà mô hình nhận dạng được nhất bằng các chỉ số theo độ ưu tiên:
 1. File có nhiều thông tin (cặp Date và Name trong từng nhãn con) ở nhiều 